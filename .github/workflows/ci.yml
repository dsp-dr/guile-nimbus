name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        guile-version: ['3.0', '3.2']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Guile (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y guile-${{ matrix.guile-version }} guile-${{ matrix.guile-version }}-dev
        sudo apt-get install -y guile-json guile-gcrypt || true
    
    - name: Install Guile (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install guile
        brew install guile-json || true
    
    - name: Check Guile version
      run: |
        guile --version || guile3 --version
    
    - name: Check dependencies
      run: |
        make check-deps || gmake check-deps
    
    - name: Compile
      run: |
        make compile || gmake compile
    
    - name: Run tests
      run: |
        make test || gmake test

  lint:
    name: Code Style Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Guile
      run: |
        sudo apt-get update
        sudo apt-get install -y guile-3.0
    
    - name: Check code style
      run: |
        make check-style

  build-dist:
    name: Build Distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Guile
      run: |
        sudo apt-get update
        sudo apt-get install -y guile-3.0
    
    - name: Create distribution
      run: |
        make dist
    
    - name: Upload distribution
      uses: actions/upload-artifact@v3
      with:
        name: nimbus-dist
        path: dist/*.tar.gz