name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            guile-pkg: guile-3.0
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y guile-3.0 guile-3.0-dev make
        # Try to install optional dependencies
        sudo apt-get install -y guile-json-4 || sudo apt-get install -y guile-json || true
        sudo apt-get install -y guile-gcrypt || true
    
    - name: Check Guile version
      run: |
        which guile || which guile-3.0
        guile --version || guile-3.0 --version
    
    - name: Check dependencies
      run: |
        make check-deps
      continue-on-error: true
    
    - name: Compile
      run: |
        make compile
    
    - name: Run tests
      run: |
        make test

  lint:
    name: Code Style Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Guile
      run: |
        sudo apt-get update
        sudo apt-get install -y guile-3.0 make
    
    - name: Check code style
      run: |
        make check-style

  build-dist:
    name: Build Distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Guile
      run: |
        sudo apt-get update
        sudo apt-get install -y guile-3.0 make
    
    - name: Create distribution
      run: |
        make dist
    
    - name: Upload distribution
      uses: actions/upload-artifact@v3
      with:
        name: nimbus-dist
        path: dist/*.tar.gz
        if-no-files-found: warn